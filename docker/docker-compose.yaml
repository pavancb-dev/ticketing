name: ticketing

services:
  apigateway:
    build:
      context: ../microservices/apigateway
      dockerfile: ../../docker/Dockerfile
    image: localhost:5000/apigateway:latest
    ports:
      - "8080:8080"
    environment:
      INVENTORY_SERVICE_NAME: inventoryservice
      BOOKING_SERVICE_NAME: bookingservice
    profiles: [apigateway, service, all]
    networks:
      ticketing:

  inventoryservice:
    build:
      context: ../microservices/inventoryservice
      dockerfile: ../../docker/Dockerfile
    image: localhost:5000/inventoryservice:latest
    environment:
      MYSQL_SERVICE_NAME: mysql
    profiles: [inventoryservice, service, all]
    networks:
      ticketing:

  bookingservice:
    build:
      context: ../microservices/bookingservice
      dockerfile: ../../docker/Dockerfile
    image: localhost:5000/bookingservice:latest
    environment:
      INVENTORY_SERVICE_NAME: inventoryservice
      MYSQL_SERVICE_NAME: mysql
      KAFKA_SERVICE_NAME: kafka
    profiles: [bookingservice, service, all]
    networks:
      ticketing:

  orderservice:
    build:
      context: ../microservices/orderservice
      dockerfile: ../../docker/Dockerfile
    image: localhost:5000/orderservice:latest
    environment:
      INVENTORY_SERVICE_NAME: inventoryservice
      MYSQL_SERVICE_NAME: mysql
      KAFKA_SERVICE_NAME: kafka
    profiles: [orderservice, service, all]
    networks:
      ticketing:

  mysql:
    image: mysql:latest
    ports:
      - "3306:3306"
    profiles: [mysql, infra, all]
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=ticketing
    networks:
      ticketing:

  kafka:
    image: apache/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    profiles: [kafka, infra, all]
    networks:
      ticketing:

networks:
  ticketing:
    name: ticketing-network