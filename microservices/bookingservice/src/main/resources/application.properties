spring.application.name=bookingservice

# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://${MYSQL_SERVICE_NAME:localhost}:3306/ticketing
spring.datasource.username=root
spring.datasource.password=
spring.sql.init.mode=always
spring.jpa.hibernate.ddl-auto=update

inventory.service.url=http://${INVENTORY_SERVICE_NAME:localhost}:8080/api/v1/inventory

#Kafka
spring.kafka.bootstrap-servers=${KAFKA_SERVICE_NAME:localhost}:9092
spring.kafka.template.default-topic=booking
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#OpenAPI
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs

#Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always